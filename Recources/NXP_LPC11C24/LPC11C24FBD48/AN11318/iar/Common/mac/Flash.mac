// We make sure to map ROM into reset/vectors. The ROM has init code that
// sets up the LPC13xx microcontroller and peripherals. It should always
// run after a reset. After the flash init code runs, it will remap the
// part so that flash is at 0 so the user vectors can take over. The
// debugger "run to main" option will hide this.

execUserSetup() // Called after debugger downloads app to target
{
  __hwReset(0);

  __writeMemory32(0x00000000, 0xE000ED08, "Memory"); //Vector table remap at 0x00000000
  __writeMemory32(0x00000000, 0x40048000, "Memory"); //ROM at 0x00000000
  SP = __readMemory32(0x00000000, "Memory");	     //Initialize stack pointer
  PC = __readMemory32(0x00000004, "Memory");	     //Put PC back to start (in ROM)
}


execUserReset() // Called after user clicks "restart" in debugger
{
  __hwReset(0);

  __writeMemory32(0x00000000, 0xE000ED08, "Memory"); //Vector table remap at 0x00000000
  __writeMemory32(0x00000000, 0x40048000, "Memory"); //ROM at 0x00000000
  SP = __readMemory32(0x00000000, "Memory");	     //Initialize stack pointer
  PC = __readMemory32(0x00000004, "Memory");	     //Put PC back to start (in ROM)
}

execUserPreload()
{
  // Flash is at 0 when user code is executing, so set this up for a pre-download config
  __hwReset(0);
  __writeMemory32(0x00000002, 0x40048000, "Memory"); //Flash at 0x00000000
}

